  _____                        ______             _
 / ____|                      |  ____|           (_)
| |  __  __ _ _ __ ___   ___  | |__   _ __   __ _ _ _ __   ___
| | |_ |/ _` | '_ ` _ \ / _ \ |  __| | '_ \ / _` | | '_ \ / _ \
| |__| | (_| | | | | | |  __/ | |____| | | | (_| | | | | |  __/
 \_____|\__,_|_| |_| |_|\___| |______|_| |_|\__, |_|_| |_|\___|
                                             __/ |
                                            |___/
                           _______        _   _              _
                          |__   __|      | | | |            | |
                             | | ___  ___| |_| |__   ___  __| |
                             | |/ _ \/ __| __| '_ \ / _ \/ _` |
                             | |  __/\__ \ |_| |_) |  __/ (_| |
                             |_|\___||___/\__|_.__/ \___|\__,_|

                          Nigel's wizzy test game engine thingy.
----------------------------------------------------------------

** What is it?
This is a one man hobby project, to test out game and programming
ideas, methods, etc.  Its heading towards a simple click'n'go
adventure game but could be used for other game styles.

** License
MIT.  Same as Ogre3d 1.7, see LICENSE file.

** Warranty
None whatsoever.  Use at your own risk.

** Features so far:
Uses Ogre3d.
Integrates Lua scripting, including a Lua console.
Some bindings of Ogre3d to Lua, amongst other things.
Basic GUI implemented.
Path finding using a navigation mesh, generated from a Ogre mesh.

** Planned features:
Game quest management, and other systems for adventure
style games.

** Running:

You should have looked at the code but:
F12  Emergency stop.  For when you screw up the scripts.
~    Toggle console.
ESC  Same as typing 'quit' as the console.

The console while active eats all key presses except "~".


** Quick Start Compiling:

First make sure you have Ogre3d 1.7+, OIS 1.2+ along with their
development files. A copy of Lua 5.2 and Luabridge 2.0 are in the
source tree.
Also needed is CMake 2.6 or above.

LINUX:
from the base directory where you have either extracted, or git clone'd,
make a directory called "build" or something similar, and move in to it.

mkdir build
cd build

Run CMake, and make

cmake ..
make

Copy a couple of configuration files to your build directory.

cp ../src/*.cfg .

Edit plugins.cfg if required.

Run!

./engine

MAC OS X:
Havn't tried yet.  Should work in theory.

WINDOWS:

Tested on Windows 7 & XP with MSVC10 Express.

I'm working on making the CMake script more friendly to Windows without
breaking Linux.

1. Adjust CMakeLists.txt so it works, and finds everything.
2. Run CMake and generate makefiles or a Visual Studio project or whatever.
3. Make an offering to the programming gods.
4. See what breaks. Fix it.
5. Run!

